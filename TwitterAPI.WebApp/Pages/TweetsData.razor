@page "/tweetsdata"
@inject IDataService _dataService
@using TwitterAPI.WebApp.Shared
@using TwitterAPI.WebApp.Services
@using TwitterAPI.Application.Models.APIModels

<PageTitle>Tweets</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Tweets</MudText>
<MudText Class="mb-8">This data is collected from Twitter API Sample Stream and component demonstrates fetching data from the server.</MudText>
@if (tweets == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="tweets" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<TweetAPIModel, object>(x=> x.Id)">Id</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<TweetAPIModel, object>(x=>x.Date)">Date</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<TweetAPIModel, object>(x=> x.HastagsToString)">Hashtags</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<TweetAPIModel, object>(x=> x.Text)">Text</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Date">@context.Date</MudTd>
            <MudTd DataLabel="Hashtags">@context.HastagsToString</MudTd>
            <MudTd DataLabel="Text">@context.Text</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}


@code {
    private List<TweetAPIModel>? tweets;

    protected override async Task OnInitializedAsync()
    {
        var result = await _dataService.GetTweets();
        tweets = result;
    }
}
